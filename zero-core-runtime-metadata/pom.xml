<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.zerows</groupId>
        <artifactId>zero-elite</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>zero-core-runtime-metadata</artifactId>
    <name>Zero.Core.Runtime.Metadata</name>
    <packaging>bundle</packaging>
    <dependencies>
        <dependency>
            <groupId>io.zerows</groupId>
            <artifactId>zero-core-ams-specification</artifactId>
        </dependency>


        <!-- Vertx -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-config-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-codegen</artifactId>
        </dependency>


        <!-- OSGI Runtime -->
        <!-- https://mvnrepository.com/artifact/org.osgi/org.osgi.framework -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.framework</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.osgi/osgi.annotation -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.dependencymanager -->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.dependencymanager</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.gogo.command -->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.gogo.command</artifactId>
        </dependency>


        <!-- Google -->
        <!-- Dependency -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>


        <!-- RxJava3 -->
        <dependency>
            <groupId>io.reactivex.rxjava3</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>


        <!-- Jsr 311 Jws / Context -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Package>
                            <!-- SPI Required -->
                            io.zerows.core.metadata.osgi.spi.*;-split-package:=merge-first,

                            io.zerows.core.metadata.*,
                            io.vertx.up.*,

                            <!-- Required -->
                            jakarta.inject.*,

                            <!-- logback / slf4j -->
                            org.slf4j.*;-split-package:=merge-first,
                            ch.qos.logback.*,
                        </Export-Package>
                        <Import-Package>
                            *;resolution:=optional,
                        </Import-Package>
                        <Embed-Transitive>true</Embed-Transitive>
                        <Embed-Dependency>
                            slf4j-api;groupId=org.slf4j;artifactId=slf4j-api;inline=true,
                            logback-classic;groupId=ch.qos.logback;artifactId=logback-classic;inline=true,
                            logback-core;groupId=ch.qos.logback;artifactId=logback-core;inline=true
                        </Embed-Dependency>
                        <!--
                        在 JDK 9 之后，OSGI的打包会引起部分警告信息：
                        [WARNING] Osgi io.zerows:zero-ams:bundle:1.0.0 :
                        Classes found in the wrong directory: {META-INF/versions/9/module-info.class=module-info.class}
                        此错误信息在编译的时候不会有问题，但在IDEA识别时会阻拦IDEA的运行，如直接导致IDEA中无法启动应用，因此，
                        需要在打包的时候忽略此错误信息，具体配置如下：
                        -->
                        <_fixupmessages>
                            "Classes found in the wrong directory";restrict:=error;is:=ignore
                        </_fixupmessages>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.compiler}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--<compilerArgs>
                        <arg>-verbose</arg>
                        <arg>-Xlint:all,-options,-path</arg>
                    </compilerArgs>-->
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/env/bin/cache/</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/env/bin/logs/</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- <includeScope>compile</includeScope> -->
                            <type>jar</type>
                            <includeTypes>jar</includeTypes>
                            <!-- 存放服务依赖的jar包，存放在服务相同目录的lib文件夹下 -->
                            <outputDirectory>
                                target/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>true</excludeTransitive>
                            <includeGroupIds>io.zerows</includeGroupIds>
                            <type>jar</type>
                            <includeTypes>jar</includeTypes>
                            <!-- 存放服务依赖的jar包，存放在服务相同目录的lib文件夹下 -->
                            <outputDirectory>
                                ${project.basedir}/env/bin/libs/bundles
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!--
            有可能要在执行 submodule 拉取的过程中先初始化一次，初始化流程参考 submodule.sh
            -->
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${project.basedir}/env/</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.basedir}/refs/</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- https://mvnrepository.com/artifact/org.codehaus.mojo/exec-maven-plugin -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>init-git-submodules</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <arguments>
                                        <argument>submodule</argument>
                                        <argument>update</argument>
                                        <argument>--init</argument>
                                        <argument>--remote</argument>
                                        <argument>--recursive</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-env</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.basedir}/env/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/refs/Zero.Rapid.Build.Runtime</directory>
                                            <includes>
                                                <include>**/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>build-bundle</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.basedir}/env/bin/libs/bundles/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/target</directory>
                                            <includes>
                                                <include>**/*.jar</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>